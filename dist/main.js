(()=>{"use strict";var n={426:(n,e,r)=>{r.d(e,{Z:()=>c});var t=r(537),o=r.n(t),i=r(645),a=r.n(i)()(o());a.push([n.id,"* {\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\nbody {\r\n  background-color: rgb(238, 238, 238);\r\n  text-align: center;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\n.d-flex {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.row {\r\n  flex-direction: row;\r\n}\r\n\r\n.click {\r\n  cursor: pointer;\r\n}\r\n\r\n.d-off {\r\n  display: none;\r\n}\r\n\r\n#main {\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n#main h1 {\r\n  padding: 30px;\r\n}\r\n\r\n#list-container {\r\n  width: 70%;\r\n  max-width: 500px;\r\n  min-width: 300px;\r\n  background-color: white;\r\n  box-shadow: 0 3px 5px 0 #bfc6be;\r\n}\r\n\r\n#list-container div {\r\n  justify-content: space-between;\r\n}\r\n\r\n.task-info {\r\n  text-align: left;\r\n  flex-grow: 3;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n}\r\n\r\n#list-title,\r\n#list-input,\r\n#list-bottom,\r\n.task-container {\r\n  font-size: medium;\r\n  padding: 10px;\r\n  border-bottom: 1px solid lightgray;\r\n}\r\n\r\n#list-title {\r\n  font-size: 16px;\r\n}\r\n\r\n#input-field {\r\n  width: 100%;\r\n}\r\n\r\n#input-field:focus {\r\n  background-color: rgb(220, 255, 220);\r\n}\r\n\r\n#list-bottom {\r\n  padding: 15px 10px;\r\n  background-color: rgb(241, 241, 241);\r\n}\r\n\r\n.task-container {\r\n  gap: 10px;\r\n  font-size: 15px;\r\n}\r\n\r\n#list-clear:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\ninput {\r\n  border: none;\r\n  font-size: 16px;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\ninput::placeholder {\r\n  font-style: italic;\r\n}\r\n\r\n.focus {\r\n  background-color: rgb(220, 255, 220);\r\n}\r\n\r\n.focus-task {\r\n  background-color: lightyellow;\r\n}\r\n\r\n.task-info:focus {\r\n  background-color: lightyellow;\r\n}\r\n\r\n.completed {\r\n  background-color: lightgray;\r\n  text-decoration: line-through;\r\n}\r\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,sBAAsB;EACtB,UAAU;EACV,SAAS;AACX;;AAEA;EACE,oCAAoC;EACpC,kBAAkB;EAClB,yCAAyC;AAC3C;;AAEA;EACE,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,mBAAmB;EACnB,uBAAuB;AACzB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,UAAU;EACV,gBAAgB;EAChB,gBAAgB;EAChB,uBAAuB;EACvB,+BAA+B;AACjC;;AAEA;EACE,8BAA8B;AAChC;;AAEA;EACE,gBAAgB;EAChB,YAAY;EACZ,qBAAqB;EACrB,qBAAqB;AACvB;;AAEA;;;;EAIE,iBAAiB;EACjB,aAAa;EACb,kCAAkC;AACpC;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,WAAW;AACb;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,oCAAoC;AACtC;;AAEA;EACE,SAAS;EACT,eAAe;AACjB;;AAEA;EACE,0BAA0B;AAC5B;;AAEA;EACE,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,6BAA6B;AAC/B;;AAEA;EACE,2BAA2B;EAC3B,6BAA6B;AAC/B",sourcesContent:["* {\r\n  box-sizing: border-box;\r\n  padding: 0;\r\n  margin: 0;\r\n}\r\n\r\nbody {\r\n  background-color: rgb(238, 238, 238);\r\n  text-align: center;\r\n  font-family: Arial, Helvetica, sans-serif;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\n.d-flex {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.row {\r\n  flex-direction: row;\r\n}\r\n\r\n.click {\r\n  cursor: pointer;\r\n}\r\n\r\n.d-off {\r\n  display: none;\r\n}\r\n\r\n#main {\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n#main h1 {\r\n  padding: 30px;\r\n}\r\n\r\n#list-container {\r\n  width: 70%;\r\n  max-width: 500px;\r\n  min-width: 300px;\r\n  background-color: white;\r\n  box-shadow: 0 3px 5px 0 #bfc6be;\r\n}\r\n\r\n#list-container div {\r\n  justify-content: space-between;\r\n}\r\n\r\n.task-info {\r\n  text-align: left;\r\n  flex-grow: 3;\r\n  word-wrap: break-word;\r\n  word-break: break-all;\r\n}\r\n\r\n#list-title,\r\n#list-input,\r\n#list-bottom,\r\n.task-container {\r\n  font-size: medium;\r\n  padding: 10px;\r\n  border-bottom: 1px solid lightgray;\r\n}\r\n\r\n#list-title {\r\n  font-size: 16px;\r\n}\r\n\r\n#input-field {\r\n  width: 100%;\r\n}\r\n\r\n#input-field:focus {\r\n  background-color: rgb(220, 255, 220);\r\n}\r\n\r\n#list-bottom {\r\n  padding: 15px 10px;\r\n  background-color: rgb(241, 241, 241);\r\n}\r\n\r\n.task-container {\r\n  gap: 10px;\r\n  font-size: 15px;\r\n}\r\n\r\n#list-clear:hover {\r\n  text-decoration: underline;\r\n}\r\n\r\ninput {\r\n  border: none;\r\n  font-size: 16px;\r\n}\r\n\r\ninput:focus {\r\n  outline: none;\r\n}\r\n\r\ninput::placeholder {\r\n  font-style: italic;\r\n}\r\n\r\n.focus {\r\n  background-color: rgb(220, 255, 220);\r\n}\r\n\r\n.focus-task {\r\n  background-color: lightyellow;\r\n}\r\n\r\n.task-info:focus {\r\n  background-color: lightyellow;\r\n}\r\n\r\n.completed {\r\n  background-color: lightgray;\r\n  text-decoration: line-through;\r\n}\r\n"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(t)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(a[s]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);t&&a[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),r&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=r):d[2]=r),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(o," */"),a=r.sources.map((function(n){return"/*# sourceURL=".concat(r.sourceRoot||"").concat(n," */")}));return[e].concat(a).concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],l=t.base?s[0]+t.base:s[0],d=i[l]||0,A="".concat(l," ").concat(d);i[l]=d+1;var u=r(A),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(p);else{var f=o(p,t);t.byIndex=c,e.splice(c,0,{identifier:A,updater:f,references:1})}a.push(A)}return a}function o(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,o){var i=t(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=r(i[a]);e[c].references--}for(var s=t(n,o),l=0;l<i.length;l++){var d=r(i[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},569:n=>{var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,r)=>{n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var o=void 0!==r.layer;o&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,o&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},40:(n,e,r)=>{n.exports=r.p+"d3632c6616bf762ec4b7.svg"},495:(n,e,r)=>{n.exports=r.p+"e3aa4351fde1a2193214.svg"},773:(n,e,r)=>{n.exports=r.p+"f90e86ac36d4f6a3e114.svg"},186:(n,e,r)=>{n.exports=r.p+"d55ba7a6c87c02d88d37.svg"}},e={};function r(t){var o=e[t];if(void 0!==o)return o.exports;var i=e[t]={id:t,exports:{}};return n[t](i,i.exports,r),i.exports}r.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return r.d(e,{a:e}),e},r.d=(n,e)=>{for(var t in e)r.o(e,t)&&!r.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),r.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;r.g.importScripts&&(n=r.g.location+"");var e=r.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var t=e.getElementsByTagName("script");t.length&&(n=t[t.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=n})(),(()=>{var n=r(379),e=r.n(n),t=r(795),o=r.n(t),i=r(569),a=r.n(i),c=r(565),s=r.n(c),l=r(216),d=r.n(l),A=r(589),u=r.n(A),p=r(426),f={};function g(n,e,r){for(let t=0;t<n.length;t+=1)n[t].index===e&&(n[t].completed=r,localStorage.setItem("taskArr",JSON.stringify(n)))}function m(n,e,r){n.checked?g(e,r,!0):g(e,r,!1)}function E(){const n=JSON.parse(localStorage.getItem("taskArr")),e=document.querySelectorAll(".task-cb");for(let r=0,t=1;r<e.length;r+=1,t+=1){const o=document.getElementById(`task-${t}`),i=document.getElementById(`input-${t}`);e[r].addEventListener("click",(()=>{e[r].checked?(o.classList.add("completed"),i.style.backgroundColor="lightgray",i.setAttribute("disabled","disabled"),m(e[r],n,t)):(o.classList.remove("completed"),i.style.backgroundColor="",i.removeAttribute("disabled"),m(e[r],n,t))}))}}f.styleTagTransform=u(),f.setAttributes=s(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=d(),e()(p.Z,f),p.Z&&p.Z.locals&&p.Z.locals;var b=r(773),C=r(186),h=r(495),v=r(40);let y=[];const x={Load:b,Trash:C,Enter:h,Check:v};let B=1;const k=n=>{B=1,n.forEach((n=>{n.index=B,B+=1}))},w=()=>JSON.parse(localStorage.getItem("taskArr")),I=n=>{localStorage.setItem("taskArr",JSON.stringify(n)),k(n),localStorage.setItem("taskArr",JSON.stringify(n))},S=()=>{if(localStorage.getItem("taskArr")){const n=JSON.parse(localStorage.getItem("taskArr"));B=n.length+1,localStorage.setItem("index",B)}else localStorage.setItem("index","1")},L=(n,e)=>{const r=n.filter((n=>n.index!==e)),t=localStorage.getItem("index",e)-1;return localStorage.setItem("index",t),r},T=()=>{const n=w();for(let e=0;e<n.length;e+=1)if(!0===n[e].completed){const n=document.getElementById(`task-${e+1}`),r=document.getElementById(`input-${e+1}`),t=document.getElementById(`cb-${e+1}`);n.classList.add("completed"),r.style.backgroundColor="lightgray",r.setAttribute("disabled","disabled"),t.setAttribute("checked","checked")}},$=(n,e,r)=>{document.getElementById("list").innerHTML="",n.sort(((n,e)=>n.index-e.index)),B=1,n.forEach((n=>{r(n,B,e),B+=1})),E(),T()},j=(n,e,r)=>{((n,e)=>{const r=document.getElementById("list"),t=((n,e)=>{const r=document.createElement("li");return r.id=`task-${n}`,r.classList.add("task-container","d-flex","row"),r.innerHTML=((n,e)=>{const{Trash:r,Check:t}=e;return`<input type="checkbox" id="cb-${n}" class="task-cb">\n  <input id="input-${n}" type="text" class="task-info">\n  <img id="check-${n}" src="${t}" alt="Check Icon" class="click d-off">\n  <img id="remove-${n}" src="${r}" alt="Remove Icon" class="click">`})(n,e),r})(n,e);r.appendChild(t)})(e,r),((n,e,r)=>{const t=document.getElementById(`remove-${n}`),o=n;t.addEventListener("click",(()=>{let n=JSON.parse(localStorage.getItem("taskArr"));n=L(n,o),I(n),$(n,e,undefined)}))})(e,r);const t=document.getElementById(`input-${e}`);t.value=n.description;const o=document.getElementById(`task-${e}`),i=document.getElementById(`check-${e}`),a=document.getElementById(`cb-${e}`);t.addEventListener("focus",(()=>{o.classList.add("focus-task"),i.classList.remove("d-off"),a.setAttribute("disabled","disabled")})),t.addEventListener("blur",(()=>{if(""===t.value){let n=JSON.parse(localStorage.getItem("taskArr"));n=L(n,fixIndex),I(n),document.getElementById("list").innerHTML="",n.sort(((n,e)=>n.index-e.index)),e=1,n.forEach((n=>{j(n,e,r),e+=1})),E()}o.classList.remove("focus-task"),i.classList.add("d-off"),((n,e)=>{const r=w();for(let t=0;t<r.length;t+=1)r[t].index===n&&(r[t].description=e.value,I(r))})(e,t),a.removeAttribute("disabled")}))},N=(n,e)=>{B=1,n.forEach((n=>{j(n,B,e),B+=1})),E(),T()},O=(n,e)=>{const r=localStorage.getItem("index"),t={description:n.value,completed:!1,index:r},o=w();o.push(t),I(o),T(),S(),document.getElementById("list").innerHTML="",N(o,e),S(),n.value=null};(()=>{const n=document.getElementById("main"),e=document.createElement("div");e.id="list-container",e.className="d-flex",e.innerHTML=`<div id="list-title" class="d-flex row"><h3>Today's To Do</h3><img src="${b}" alt="Load Icon" class="click"></div>\n<div id="list-input" class="d-flex row"><input type="text" id="input-field" placeholder="Add to your list..."><img id="btn-enter" src="${h}" alt="Enter Icon" class="click"></div>\n<ul id="list" class="d-flex"></ul>\n<div id="list-bottom">\n    <p id="list-clear" class="click">Clear all completed</p>\n</div>`,n.appendChild(e)})(),window.addEventListener("load",(()=>{localStorage.getItem("taskArr")?y=JSON.parse(localStorage.getItem("taskArr")):(y=[],localStorage.setItem("taskArr",JSON.stringify(y))),N(y,x),S()})),(n=>{const e=document.getElementById("input-field"),r=document.getElementById("btn-enter");e.addEventListener("keydown",(r=>{"Enter"===r.key&&""!==e.value&&O(e,n)})),r.addEventListener("click",(()=>{""!==e.value&&O(e,n)}));const t=document.getElementById("list-input");e.addEventListener("focus",(()=>{t.classList.add("focus")})),e.addEventListener("blur",(()=>{t.classList.remove("focus")})),document.getElementById("list-clear").addEventListener("click",(()=>{(n=>{let e=w();e=e.filter((n=>!1===n.completed)),document.getElementById("list").innerHTML="",k(e),localStorage.setItem("taskArr",JSON.stringify(e)),N(e,n)})(n)}))})(x)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,